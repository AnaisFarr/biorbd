name: Run the tests

on: [pull_request]

env:
  BUILD_FOLDER: build
  EXAMPLES_FOLDER: examples

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            label: linux-64
            prefix: /usr/share/miniconda3/envs/biorbd_eigen
    name: ${{ matrix.label }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
      
      - name: Get number of CPU cores
        uses: SimenB/github-actions-cpu-cores@v1
        id: cpu-cores

      - name: Setup environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          use-mamba: true
          activate-environment: biorbd_eigen
          environment-file: environment_eigen.yml
        
      - name: Print mamba info
        run: | 
          mamba config --show
          mamba info
          mamba list
          
      - name: Install extra common dependencies
        run: | 
          mamba install cmake git pkgconfig swig pytest pytest-cov codecov lcov -cconda-forge
          mamba list
          git submodule update --init --recursive

      - name: Build biorbd UNIX
        run: |
          BIORBD_FOLDER=`pwd`
          CONDA_ENV_PATH=$CONDA/envs/biorbd_eigen
          mkdir $BIORBD_FOLDER/$BUILD_FOLDER
          cd $BIORBD_FOLDER/$BUILD_FOLDER
          cmake -DCMAKE_INSTALL_PREFIX=$CONDA_ENV_PATH -DMATH_LIBRARY_BACKEND="Eigen3" -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON -DMODULE_ACTUATORS=ON -DMODULE_KALMAN=ON -DMODULE_MUSCLES=ON -DBUILD_EXAMPLE=ON -DBINDER_C=ON -DBINDER_PYTHON3=ON ..
          make install -j${{ steps.cpu-cores.outputs.count }}
          cd $BIORBD_FOLDER
        if: matrix.label != 'win-64'


      - name: Perform code coverage 
        run: |
          BIORBD_FOLDER=`pwd`
          CONDA_ENV_PATH=$CONDA/envs/biorbd_eigen
          mkdir -p $BUILD_FOLDER
          cd $BUILD_FOLDER
          cmake -DCMAKE_INSTALL_PREFIX=$CONDA_ENV_PATH -DCMAKE_BUILD_TYPE=Coverage -DBUILD_TESTS=ON -DBUILD_EXAMPLE=OFF -DMODULE_ACTUATORS=ON -DMODULE_MUSCLES=ON -DMODULE_KALMAN=ON ..
          cp -r test/models/ .
          make biorbd_eigen_coverage -j${{ steps.cpu-cores.outputs.count }}
          lcov --directory . --capture --output-file coverage.info
          lcov --remove coverage.info '/usr/*' --output-file coverage.info
          lcov --list coverage.info
          bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
          cd $BIORBD_FOLDER
